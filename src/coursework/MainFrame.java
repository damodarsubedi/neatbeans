/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package coursework;
import java.util.regex.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class MainFrame extends javax.swing.JFrame{

    /**
     * Creates new form MainFrame
     */
    
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        colourBG = new javax.swing.ButtonGroup();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        designPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        cleanPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        tableByBrand = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        searchPrice = new javax.swing.JTextField();
        priceSearch = new javax.swing.JButton();
        brandSearch = new javax.swing.JComboBox<>();
        acePrice = new javax.swing.JComboBox<>();
        inputPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        brandCB = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        modelTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        engineTF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        milageTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        redRB = new javax.swing.JRadioButton();
        whiteRB = new javax.swing.JRadioButton();
        blackRB = new javax.swing.JRadioButton();
        blueRB = new javax.swing.JRadioButton();
        grayRB = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        tankCapTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        seatsCB = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        priceTF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        fuleCB = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        clearBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        nameErrorTF = new javax.swing.JLabel();
        engineErrorTF = new javax.swing.JLabel();
        milageErrorTF = new javax.swing.JLabel();
        tankErrorTF = new javax.swing.JLabel();
        priceErrorTF = new javax.swing.JLabel();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        delete = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        nameSoft = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        showTableBtn = new javax.swing.JButton();
        inputBtn = new javax.swing.JButton();
        homeBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLayeredPane2.setLayout(new java.awt.CardLayout());

        designPanel.setBackground(new java.awt.Color(54, 33, 89));

        jPanel1.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout cleanPanelLayout = new javax.swing.GroupLayout(cleanPanel);
        cleanPanel.setLayout(cleanPanelLayout);
        cleanPanelLayout.setHorizontalGroup(
            cleanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel18)
        );
        cleanPanelLayout.setVerticalGroup(
            cleanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel18)
        );

        jPanel1.add(cleanPanel, "card3");

        tableByBrand.setBackground(new java.awt.Color(51, 255, 255));
        tableByBrand.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable2.setForeground(new java.awt.Color(54, 33, 89));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand", "Model", "Name", "Engine", "No. of seats", "Color", "Milage", "Full Tank", "Fuel Type", "Price"
            }
        ));
        jTable2.setToolTipText("price");
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout tableByBrandLayout = new javax.swing.GroupLayout(tableByBrand);
        tableByBrand.setLayout(tableByBrandLayout);
        tableByBrandLayout.setHorizontalGroup(
            tableByBrandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableByBrandLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE)
                .addContainerGap())
        );
        tableByBrandLayout.setVerticalGroup(
            tableByBrandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableByBrandLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(176, Short.MAX_VALUE))
        );

        jPanel1.add(tableByBrand, "card2");

        searchPrice.setText("Price Example:23000");
        searchPrice.setToolTipText("price");
        searchPrice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchPriceMouseClicked(evt);
            }
        });
        searchPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchPriceKeyReleased(evt);
            }
        });

        priceSearch.setBackground(new java.awt.Color(102, 255, 102));
        priceSearch.setText("Search");
        priceSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceSearchActionPerformed(evt);
            }
        });

        brandSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Brand", "BMW", "Ferrari" }));
        brandSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandSearchActionPerformed(evt);
            }
        });

        acePrice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort By:", "Price", "Fuel Tank", "Engine" }));
        acePrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acePriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout designPanelLayout = new javax.swing.GroupLayout(designPanel);
        designPanel.setLayout(designPanelLayout);
        designPanelLayout.setHorizontalGroup(
            designPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(designPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(designPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(searchPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(priceSearch)
                .addGap(40, 40, 40)
                .addComponent(brandSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(acePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        designPanelLayout.setVerticalGroup(
            designPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(designPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(designPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceSearch)
                    .addComponent(brandSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLayeredPane2.add(designPanel, "card4");

        inputPanel.setBackground(new java.awt.Color(54, 33, 89));
        inputPanel.setAutoscrolls(true);

        jPanel3.setBackground(new java.awt.Color(51, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel2.setText("Brand");

        brandCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Brand", "BMW", "Ferrari" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel3.setText("Model No.");

        modelTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelTFActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel4.setText("Name");

        nameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameTFKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameTFKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel5.setText("Engine");

        engineTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                engineTFKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel8.setText("Milage");

        milageTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                milageTFKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel7.setText("Colour");

        colourBG.add(redRB);
        redRB.setText("Red ");
        redRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redRBActionPerformed(evt);
            }
        });

        whiteRB.setBackground(new java.awt.Color(255, 255, 255));
        colourBG.add(whiteRB);
        whiteRB.setForeground(new java.awt.Color(255, 255, 255));
        whiteRB.setText("    ");
        whiteRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whiteRBActionPerformed(evt);
            }
        });

        colourBG.add(blackRB);
        blackRB.setText("    ");
        blackRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blackRBActionPerformed(evt);
            }
        });

        colourBG.add(blueRB);
        blueRB.setText("    ");
        blueRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueRBActionPerformed(evt);
            }
        });

        colourBG.add(grayRB);
        grayRB.setText("    ");
        grayRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grayRBActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel9.setText("Fule Tank Capacity");

        tankCapTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tankCapTFKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel6.setText("No. of Seats");

        seatsCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose", "2", "4", "6", "7", "12" }));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel11.setText("Price");

        priceTF.setMinimumSize(new java.awt.Dimension(6, 24));
        priceTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTFActionPerformed(evt);
            }
        });
        priceTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                priceTFKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel10.setText("Fule Type");

        fuleCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Fule Type", "Petrol", "Diesel" }));

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("Red");

        jLabel13.setText("Black");

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("White");

        jLabel15.setForeground(new java.awt.Color(153, 153, 153));
        jLabel15.setText("Grey");

        jLabel16.setForeground(new java.awt.Color(0, 0, 255));
        jLabel16.setText("Blue");

        clearBtn.setBackground(new java.awt.Color(102, 255, 102));
        clearBtn.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(102, 0, 102));
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(102, 255, 102));
        saveBtn.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(102, 0, 102));
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        title.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        title.setForeground(new java.awt.Color(255, 153, 0));
        title.setText("Add Car");

        nameErrorTF.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        nameErrorTF.setForeground(new java.awt.Color(255, 0, 51));

        engineErrorTF.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        engineErrorTF.setForeground(new java.awt.Color(255, 0, 51));

        milageErrorTF.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        milageErrorTF.setForeground(new java.awt.Color(255, 0, 51));

        tankErrorTF.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        tankErrorTF.setForeground(new java.awt.Color(255, 0, 51));

        priceErrorTF.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        priceErrorTF.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(tankCapTF, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tankErrorTF, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(milageTF, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fuleCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(96, 96, 96)
                                .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(priceErrorTF, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(201, 201, 201)
                                        .addComponent(milageErrorTF, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(54, 54, 54)
                                        .addComponent(seatsCB, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2))
                                .addGap(62, 62, 62)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(brandCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(engineTF, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(nameTF, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(modelTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(engineErrorTF, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                            .addComponent(nameErrorTF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel13)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel16)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel15))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(redRB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(whiteRB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(blackRB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(blueRB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(grayRB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(brandCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameErrorTF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(engineErrorTF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(modelTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(engineTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(redRB)
                    .addComponent(whiteRB)
                    .addComponent(blackRB)
                    .addComponent(blueRB)
                    .addComponent(grayRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15))
                .addGap(1, 1, 1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(seatsCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(7, 7, 7))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(milageErrorTF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(milageTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15)
                        .addComponent(fuleCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(priceErrorTF, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tankCapTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tankErrorTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(170, Short.MAX_VALUE))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLayeredPane2.add(inputPanel, "card3");

        tablePanel.setBackground(new java.awt.Color(51, 255, 255));

        jTable1.setBackground(new java.awt.Color(54, 33, 89));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Brand", "Model No.", "Name", "Engine", "No. of  Seats", "Colour", "Milage", "Fule Tank Capacity", "Fule Type", "Price"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        delete.setText("Remove");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jLayeredPane2.add(tablePanel, "card2");

        jPanel2.setBackground(new java.awt.Color(51, 255, 255));

        nameSoft.setBackground(new java.awt.Color(51, 255, 255));
        nameSoft.setPreferredSize(new java.awt.Dimension(181, 134));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/coursework/animated-car-image-0041.gif"))); // NOI18N

        javax.swing.GroupLayout nameSoftLayout = new javax.swing.GroupLayout(nameSoft);
        nameSoft.setLayout(nameSoftLayout);
        nameSoftLayout.setHorizontalGroup(
            nameSoftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nameSoftLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(8, 8, 8)
                .addComponent(jLabel17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        nameSoftLayout.setVerticalGroup(
            nameSoftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nameSoftLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(nameSoftLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        showTableBtn.setBackground(new java.awt.Color(102, 255, 102));
        showTableBtn.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        showTableBtn.setForeground(new java.awt.Color(102, 0, 102));
        showTableBtn.setText("Table");
        showTableBtn.setBorder(null);
        showTableBtn.setBorderPainted(false);
        showTableBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTableBtnActionPerformed(evt);
            }
        });

        inputBtn.setBackground(new java.awt.Color(102, 255, 102));
        inputBtn.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        inputBtn.setForeground(new java.awt.Color(102, 0, 102));
        inputBtn.setText("Input");
        inputBtn.setBorder(null);
        inputBtn.setBorderPainted(false);
        inputBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputBtnActionPerformed(evt);
            }
        });

        homeBtn.setBackground(new java.awt.Color(102, 255, 102));
        homeBtn.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        homeBtn.setForeground(new java.awt.Color(102, 0, 102));
        homeBtn.setText("Home");
        homeBtn.setBorder(null);
        homeBtn.setBorderPainted(false);
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(nameSoft, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showTableBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nameSoft, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(homeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(showTableBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(inputBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59))
        );

        fileMenu.setText("File");

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        jMenuBar1.add(fileMenu);

        helpMenu.setText("Help");
        helpMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuActionPerformed(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("open help");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        helpMenu.add(jMenuItem1);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane2)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
      JFileChooser chooser = new JFileChooser();
      chooser.showOpenDialog(null);
      File f = chooser.getSelectedFile();
      if (f == null)
      {
          JOptionPane.showMessageDialog(null, "PLEASE SELECT 1 FILE!", "Error", JOptionPane.ERROR_MESSAGE); 
      }
      else
      {
          String filename = f.getAbsolutePath();
          try {
              importFromTxt(filename);
          }
          catch (Exception ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
          }
      }
        
        
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        // TODO add your handling code here:
        tableByBrand.setVisible(false);
        designPanel.setVisible(true);
        tablePanel.setVisible(false);
        inputPanel.setVisible(false);
    }//GEN-LAST:event_homeBtnActionPerformed

    private void inputBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputBtnActionPerformed
        // TODO add your handling code here:
        designPanel.setVisible(false);
        tablePanel.setVisible(false);
        inputPanel.setVisible(true);
    }//GEN-LAST:event_inputBtnActionPerformed

    private void showTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTableBtnActionPerformed
        // TODO add your handling code here:
        designPanel.setVisible(false);
        tablePanel.setVisible(true);
        inputPanel.setVisible(false);
    }//GEN-LAST:event_showTableBtnActionPerformed

    private void redRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_redRBActionPerformed

    private void whiteRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whiteRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_whiteRBActionPerformed

    private void blackRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blackRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blackRBActionPerformed

    private void blueRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blueRBActionPerformed

    private void grayRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grayRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grayRBActionPerformed
    public void clearAll(){
        brandCB.setSelectedIndex(0);
        modelTF.setText("");
        nameTF.setText("");
        engineTF.setText("");
        tankCapTF.setText("");
        priceTF.setText("");
        milageTF.setText("");
        seatsCB.setSelectedIndex(0);
        fuleCB.setSelectedIndex(0);
        colourBG.clearSelection();
    }
    public void importTable(String[] data)
    {
        DefaultTableModel models = (DefaultTableModel) jTable1.getModel();
        int rowCount = jTable1.getRowCount();
        int colCount = jTable1.getColumnCount();
        int nextRow = 0;
        boolean emptyFlag = false;
        
        
        //model.addRow(data);
        if (rowCount != 0) 
        {
            
            do 
            {
                if ((jTable1.getValueAt(nextRow, 0)) != null) 
                {
                    nextRow++;
                } 
                else 
                {
                    emptyFlag = true;
                    models.addRow(new Object[]{});
                }
            } 
            while (nextRow < rowCount && !emptyFlag);
            clearAll();
            for (int i = 0; i < colCount; i++) 
            {                
                jTable1.setValueAt(data[i], nextRow, i);
            }               
              
        }
    }
    
    public void importFromTxt(String fileName) throws Exception
    {
        
        boolean inputFlag = false;
        File file = new File(fileName);
        BufferedReader br = new  BufferedReader(new FileReader(file)); 
        String line;
        while ((line = br.readLine()) != null) 
        {          
            String[] data = line.split(" "); 
            if (data.length != 10)
            {
                JOptionPane.showMessageDialog(null, "FILE Format is Wrong!", "Error", JOptionPane.ERROR_MESSAGE); 
                break;
            }
            else
            {                
                importTable(data);
                inputFlag = true;               
            }           
        }
        if(inputFlag == true)
        {
            JOptionPane.showMessageDialog(rootPane, "Your File imported Sucessfully.");        
        }
        
        
    }
    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // clears all the text Fields, uncheck randio buttons and unselect the item in combobox
        clearAll();
        
    }//GEN-LAST:event_clearBtnActionPerformed

    public void addToTable()
    {
        String brand = (String) brandCB.getSelectedItem();
        String model = modelTF.getText();
        String name = nameTF.getText();
        String engine = engineTF.getText();
        String tankCap = tankCapTF.getText();
        String milage = milageTF.getText();
        String price = priceTF.getText();
        String seats = (String) seatsCB.getSelectedItem();
        String fule = (String) fuleCB.getSelectedItem();
        String colour = "";
        
        if (redRB.isSelected())
        {
            colour = "Red";
        }
        else if(whiteRB.isSelected())
        {
            colour = "White";
        }
        else if(blackRB.isSelected())
        {
            colour = "Black";
        }
        else if(blueRB.isSelected())
        {
            colour = "Blue";
        }
        else if(grayRB.isSelected())
        {
            colour = "Gray";
        }
        if (brandCB.getSelectedIndex() > 0)
        {
            if (!model.isEmpty())
            {
                if (!name.isEmpty())
                {
                    if (!engine.isEmpty())
                    {
                        if (!colour.isEmpty())
                        {
                            if (seatsCB.getSelectedIndex() > 0)
                            {
                                if(!milage.isEmpty())
                                {                                  
                                    if (fuleCB.getSelectedIndex() > 0)
                                    {
                                        if (!tankCap.isEmpty())
                                        {
                                            
                                            if (!price.isEmpty())
                                            {
                                            
                                                String[] data = {brand,model,name,engine,seats,colour,milage,tankCap,fule,price};                                                                                   
                                                importTable(data);
                                                JOptionPane.showMessageDialog(rootPane, "Sucessfully added");
                                            }
                                            else
                                            {
                                                JOptionPane.showMessageDialog(rootPane, "Please enter the Price.");
                                            }
                                        }
                                        else
                                        {
                                            JOptionPane.showMessageDialog(rootPane, "Please enter the Fule Tank Capacity.");
                                        }
                                    }
                                    else
                                    {
                                        JOptionPane.showMessageDialog(rootPane, "Please select the Fule Type.");
                                    }
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(rootPane, "Please enter the Milage.");
                                }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(rootPane, "Please select the No. of Seats.");
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane, "Please select the colour.");
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "Please enter the Engine .");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "Please enter the Name.");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "Please enter the Model No. .");
            }
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "Please select the Brand.");
        }     
    }
    public boolean checkModelNo()
    {
        boolean flag = false;
        String model = modelTF.getText();
        for(int i=0;i<=jTable1.getRowCount()-2;i++)
        {
            if(jTable1.getValueAt(i,1).equals(model))
            {
                flag = true;  
                break;
            }            
        }
        return flag;
    }
    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here
        boolean flag = checkModelNo();
        if(flag==false)
        {
            addToTable();
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Model Number Already Exist.");
        }
        
    }//GEN-LAST:event_saveBtnActionPerformed
public ArrayList<ArrayList<String>> toArray()
    {
        boolean flag = false;
        int rowCount = jTable1.getRowCount();
        int colCount = jTable1.getColumnCount();        
        ArrayList<ArrayList<String>> pList = new ArrayList<>();        
        if (rowCount != 0) 
        {              
            for (int j =0; j < rowCount-1; j++)                
            {                
                ArrayList<String> sList = new ArrayList<>(); //sList must be empty after sList ia added to pList.
                for (int i = 0; i < colCount; i++) 
                {   
                    String temp = (String) jTable1.getValueAt(j, i);
                    sList.add(temp);                    //adding on sList Array List.                    
                }   
                pList.add(sList);  
            }            
        }        
        return pList;        
    }    

    public int binarySearch(ArrayList<ArrayList<String>> pList, int value)
    {
        int low = 0;
        int high = pList.size()-1;
        while (low <= high) {
            int mid = low + ((high - low) / 2);
            if (Integer.parseInt(pList.get(mid).get(9)) > value)
            {
               high = mid - 1;
            }
            else if (Integer.parseInt(pList.get(mid).get(9)) < value)
            {
                low = mid + 1;
            }
            else  // not greater or less so Equal
            {
                return mid; 
            }

       }
       return -1; // if not Found
    }
    
    public void searchResult()
    {
        if(jTable1.getRowCount()>2)
        {   
            ArrayList<ArrayList<String>> pList = shorting(9);
            try{
                int value = Integer.parseInt(searchPrice.getText());
                int high = pList.size()-1;
                int low = 0;                       
                int result = binarySearch(pList, value);
                if(result == -1)
                {
                    JOptionPane.showMessageDialog(rootPane, "No Result Found!!");                                                
                }
                else
                {
                    String brand = pList.get(result).get(0);
                    String model = pList.get(result).get(1);
                    String name = pList.get(result).get(2);
                    String engine = pList.get(result).get(3);
                    String noseat = pList.get(result).get(4);
                    String color = pList.get(result).get(6);
                    String milage = pList.get(result).get(5);
                    String ftank = pList.get(result).get(7);
                    String ftype = pList.get(result).get(8);
                    String price = pList.get(result).get(9);
                    JOptionPane.showMessageDialog(null,
                            "Brand:           "+brand+"\n"+
                            "Model:           "+model+"\n"+
                            "Name:             "+name+"\n"+
                            "Engine:           "+engine+"\n"+
                            "No. Of Seats:  "+noseat+"\n"+
                            "Color:           "+color+"\n"+
                            "Milage:           "+milage+"\n"+
                            "Fule Tank:        "+ftank+"\n"+
                            "Fule Type:        "+ftype+"\n"+
                            "Price:            "+price+"\n"                                   
                    );

                }   
            }
            catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(rootPane, "Search For Price Only!!"); 
            }          
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "NO or Only One Value in Table.");
        }        
    }
    

    private void modelTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modelTFActionPerformed
    
    private void priceSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceSearchActionPerformed
        // TODO add your handling code here:
        searchResult();
    }//GEN-LAST:event_priceSearchActionPerformed
 public ArrayList<ArrayList<String>> shorting(int col)
    {
        DefaultTableModel models = (DefaultTableModel) jTable2.getModel();
        ArrayList<ArrayList<String>> pList = toArray();
         models.setRowCount(0);
        int n = pList.size();
        for (int i=0; i<n; i++)
        {         
            for(int j = i+1;j<n; j++)
            {                
                if (Integer.parseInt(pList.get(j).get(col)) < Integer.parseInt(pList.get(i).get(col)))
                {                
                    ArrayList<String> temp1 = pList.get(i); 
                    ArrayList<String> temp2 = pList.get(j);                   
                    pList.set(i, temp2);
                    pList.set(j, temp1);
                }            
            }
        }
        return pList;
        
    }
    private void brandSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandSearchActionPerformed
        // TODO add your handling code here:
        if(brandSearch.getSelectedIndex()>0)
        {
            tableByBrand.setVisible(true);
            cleanPanel.setVisible(false);
            DefaultTableModel models = (DefaultTableModel) jTable2.getModel();
            ArrayList<ArrayList<String>> pList = toArray();
            if(brandSearch.getSelectedIndex()==1)
            {
                models.setRowCount(0);
                for(int i=0; pList.size()>i; i++)
                {
                    if("BMW".equals(pList.get(i).get(0)))
                    {
                        Object[] a = pList.get(i).toArray();
                        models.addRow(a);
                    }
                    
                }
            }
            if(brandSearch.getSelectedIndex()==2)
            {
                models.setRowCount(0);
                for(int i=0; pList.size()>i; i++)
                {
                    if("Ferrari".equals(pList.get(i).get(0)))
                    {
                        Object[] a = pList.get(i).toArray();
                        models.addRow(a);
                    }
                    
                }
            }
        }
    }//GEN-LAST:event_brandSearchActionPerformed

    private void acePriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acePriceActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        DefaultTableModel models = (DefaultTableModel) jTable2.getModel();
        tableByBrand.setVisible(true);
        cleanPanel.setVisible(false);
        if(acePrice.getSelectedIndex()>0)
        {
            if(acePrice.getSelectedIndex()==1)
            {
                ArrayList<ArrayList<String>> sortedList = shorting(9);
                for(int i=0; sortedList.size()>i; i++)
                {
                    Object[] a = sortedList.get(i).toArray();
                    models.addRow(a);
                }
            }
            if(acePrice.getSelectedIndex()==2)
            {
                ArrayList<ArrayList<String>> sortedList = shorting(7);
                for(int i=0; sortedList.size()>i; i++)
                {
                    Object[] a = sortedList.get(i).toArray();
                    models.addRow(a);
                }
            }
            if(acePrice.getSelectedIndex()==3)
            {
                ArrayList<ArrayList<String>> sortedList = shorting(3);
                for(int i=0; sortedList.size()>i; i++)
                {
                    Object[] a = sortedList.get(i).toArray();
                    models.addRow(a);
                }
            }
        }
    }//GEN-LAST:event_acePriceActionPerformed

    private void nameTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTFKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_nameTFKeyPressed

    private void nameTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTFKeyReleased
        // TODO add your handling code here:
        String pattern="^[a-zA-Z0-9]{2,30}$";
        Pattern patt=Pattern.compile(pattern);
        Matcher match=patt.matcher(nameTF.getText());
        if(!match.matches()){
            nameErrorTF.setText("Input Valid Name");
        }
        else{
            nameErrorTF.setText(null);
        }
    }//GEN-LAST:event_nameTFKeyReleased

    private void milageTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_milageTFKeyReleased
        // TODO add your handling code here:
        String pattern="^[0-9]{2,4}$";
        Pattern patt=Pattern.compile(pattern);
        Matcher match=patt.matcher(milageTF.getText());
        if(!match.matches()){
            milageErrorTF.setText("Input Valid milage");
        }
        else{
            milageErrorTF.setText(null);
        }
    }//GEN-LAST:event_milageTFKeyReleased

    private void priceTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTFKeyReleased
        // TODO add your handling code here:
        String pattern="^[0-9]{2,30}$";
        Pattern patt=Pattern.compile(pattern);
        Matcher match=patt.matcher(priceTF.getText());
        if(!match.matches()){
            priceErrorTF.setText("Input Valid Price");
     
        }
        else{
            priceErrorTF.setText(null);
        }
    }//GEN-LAST:event_priceTFKeyReleased

    private void searchPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchPriceKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_searchPriceKeyReleased

    private void engineTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_engineTFKeyReleased
        // TODO add your handling code here:
          String pattern="^[0-9]{2,10}$";
        Pattern patt=Pattern.compile(pattern);
        Matcher match=patt.matcher(engineTF.getText());
        if(!match.matches()){
            engineErrorTF.setText("Input Valid Engine");
     
        }
        else{
            engineErrorTF.setText(null);
        }
    }//GEN-LAST:event_engineTFKeyReleased

    private void tankCapTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tankCapTFKeyReleased
        // TODO add your handling code here:
          String pattern="^[0-9]{2,10}$";
        Pattern patt=Pattern.compile(pattern);
        Matcher match=patt.matcher(tankCapTF.getText());
        if(!match.matches()){
            tankErrorTF.setText("Input Valid Tank Capacity");
     
        }
        else{
            tankErrorTF.setText(null);
        }
    }//GEN-LAST:event_tankCapTFKeyReleased

    private void priceTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTFActionPerformed

    private void searchPriceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchPriceMouseClicked
        // TODO add your handling code here:
        searchPrice.setText("");
    }//GEN-LAST:event_searchPriceMouseClicked

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow()<0){
            JOptionPane.showMessageDialog(rootPane, "NO Value in Table to delete.");
        }else{
        DefaultTableModel models = (DefaultTableModel) jTable1.getModel();
        models.removeRow(jTable1.getSelectedRow());
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void helpMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuActionPerformed
        // TODO add your handling code here:
      
        
    }//GEN-LAST:event_helpMenuActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
          Help h = new Help();
          h.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {       
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
                designPanel.setVisible(true);
                tablePanel.setVisible(false);
                inputPanel.setVisible(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> acePrice;
    private javax.swing.JRadioButton blackRB;
    private javax.swing.JRadioButton blueRB;
    private javax.swing.JComboBox<String> brandCB;
    private javax.swing.JComboBox<String> brandSearch;
    private javax.swing.JPanel cleanPanel;
    private javax.swing.JButton clearBtn;
    private javax.swing.ButtonGroup colourBG;
    private javax.swing.JButton delete;
    private static javax.swing.JPanel designPanel;
    private javax.swing.JLabel engineErrorTF;
    private javax.swing.JTextField engineTF;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JComboBox<String> fuleCB;
    private javax.swing.JRadioButton grayRB;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton homeBtn;
    private javax.swing.JButton inputBtn;
    private static javax.swing.JPanel inputPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private static javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel milageErrorTF;
    private javax.swing.JTextField milageTF;
    private javax.swing.JTextField modelTF;
    private javax.swing.JLabel nameErrorTF;
    private javax.swing.JPanel nameSoft;
    private javax.swing.JTextField nameTF;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JLabel priceErrorTF;
    private javax.swing.JButton priceSearch;
    private javax.swing.JTextField priceTF;
    private javax.swing.JRadioButton redRB;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField searchPrice;
    private javax.swing.JComboBox<String> seatsCB;
    private javax.swing.JButton showTableBtn;
    private static javax.swing.JPanel tableByBrand;
    private static javax.swing.JPanel tablePanel;
    private javax.swing.JTextField tankCapTF;
    private javax.swing.JLabel tankErrorTF;
    private javax.swing.JLabel title;
    private javax.swing.JRadioButton whiteRB;
    // End of variables declaration//GEN-END:variables
}
